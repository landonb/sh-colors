#!/bin/sh
# vim:tw=0:ts=2:sw=2:et:norl:ft=sh
# Project: https://github.com/landonb/sh-colors#ðŸ¤¸
# License: MIT

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

strip_colors () {
  # - Strip color codes from stream. Ref:
  #   http://stackoverflow.com/questions/17998978/removing-colors-from-output
  /usr/bin/env sed -E "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g" "$@"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

this_file_name="strip-colors"
shell_sourced () { [ "$(basename -- "$0")" != "${this_file_name}" ]; }
# Note that bash_sourced only meaningful if shell_sourced is true.
bash_sourced () { declare -p FUNCNAME > /dev/null 2>&1; }

if ! shell_sourced; then
  strip_colors "${@}"
else
  if bash_sourced; then
    # Generally no need to export except for completeness: this wires
    # strip_colors to work from sub-process, e.g., you could . and bash
    # `. strip-colors ; /bin/bash --noprofile --norc` and it'd be there.
    export -f strip_colors
  else
    # E.g., sourced in `dash`, which has no `export -f`, so strip_colors
    # will be available in the current session, but absent from any spawns.
    true
  fi

  unset this_file_name
  unset -f shell_sourced
  unset -f bash_sourced
fi

